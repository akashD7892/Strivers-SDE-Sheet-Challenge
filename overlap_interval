public:
    vector<vector<int>> overlappedInterval(vector<vector<int>>& intervals) {
         // Code here
         vector<vector<int>>ans ;
         // this would sort the array through coloumn wise;
         sort( intervals.begin(), intervals.end() );
         for( int i=0; i<intervals.size(); i++ ){
            if( ans.empty() ){
                ans.push_back(intervals[i]) ;
            }
            else{
                //prior interval
                vector<int>&v = ans.back() ;
                int y = v[1];//ending
                
                // for an interval to overlap the second timming of prev 
                // one should be greater draw two lines you can understand
                // last of prior must be greater than next interv's first 
                if( intervals[i][0] <= y ){
                    v[1] = max( y, intervals[i][1]) ;
                }
                else{
                    ans.push_back(intervals[i]) ;
                }
            }
         }
         
         return ans;
    }
};
